{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshv\\\\Downloads\\\\reactjs_erp\\\\reactjs_erp\\\\Front-end\\\\src\\\\layouts\\\\AdminLayout\\\\Navigation\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ConfigContext } from '../../../contexts/ConfigContext';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport NavLogo from './NavLogo';\nimport MenuItems from './NavContent/MenuItems';\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navigation = () => {\n  _s();\n  const configContext = useContext(ConfigContext);\n  const {\n    layoutType,\n    collapseMenu\n  } = configContext.state;\n  const windowSize = useWindowSize();\n  const [menuItems, setMenuItems] = useState([]);\n  const location = useLocation(); // Get current location using useLocation hook\n\n  useEffect(() => {\n    const fetchMenuItems = async () => {\n      try {\n        // Check if the current path is \"dashboard/default\"\n        if (location.pathname !== '/app/process/default') {\n          // Retrieve user data from localStorage\n          const storedUserData = localStorage.getItem('userData');\n          if (storedUserData) {\n            const {\n              username,\n              password\n            } = JSON.parse(storedUserData);\n            // Fetch menu items using username and password\n            const response = await fetch('http://localhost:5000/Login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username,\n                password\n              })\n            });\n            if (!response.ok) {\n              throw new Error('Failed to fetch menu items');\n            }\n            const data = await response.json();\n            console.log('Received data:', data);\n            setMenuItems(data.items);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching menu items:', error);\n      }\n    };\n    fetchMenuItems();\n  }, [location.pathname]); // Fetch menu items whenever the location changes\n\n  let navClass = ['pcoded-navbar'];\n  navClass = [...navClass, layoutType];\n  if (windowSize.width < 992 && collapseMenu) {\n    navClass = [...navClass, 'mob-open'];\n  } else if (collapseMenu) {\n    navClass = [...navClass, 'navbar-collapsed'];\n  }\n  let navBarClass = ['navbar-wrapper'];\n  let navContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: navBarClass.join(' '),\n    children: [/*#__PURE__*/_jsxDEV(NavLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n      menuItems: menuItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  if (windowSize.width < 992) {\n    navContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(NavLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItems, {\n        menuItems: menuItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: navClass.join(' '),\n      children: navContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Navigation, \"tzdro0HqNHapmq3PCv25fFXwSSo=\", false, function () {\n  return [useWindowSize, useLocation];\n});\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ConfigContext","useWindowSize","NavLogo","MenuItems","useLocation","jsxDEV","_jsxDEV","Navigation","_s","configContext","layoutType","collapseMenu","state","windowSize","menuItems","setMenuItems","location","fetchMenuItems","pathname","storedUserData","localStorage","getItem","username","password","JSON","parse","response","fetch","method","headers","body","stringify","ok","Error","data","json","console","log","items","error","navClass","width","navBarClass","navContent","className","join","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/yeshv/Downloads/reactjs_erp/reactjs_erp/Front-end/src/layouts/AdminLayout/Navigation/index.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ConfigContext } from '../../../contexts/ConfigContext';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport NavLogo from './NavLogo';\nimport MenuItems from './NavContent/MenuItems';\nimport { useLocation } from 'react-router-dom'; // Import useLocation from react-router-dom\n\nconst Navigation = () => {\n  const configContext = useContext(ConfigContext);\n  const { layoutType, collapseMenu } = configContext.state;\n  const windowSize = useWindowSize();\n  const [menuItems, setMenuItems] = useState([]);\n  const location = useLocation(); // Get current location using useLocation hook\n\n  useEffect(() => {\n    const fetchMenuItems = async () => {\n      try {\n        // Check if the current path is \"dashboard/default\"\n        if (location.pathname !== '/app/process/default') {\n          // Retrieve user data from localStorage\n          const storedUserData = localStorage.getItem('userData');\n          if (storedUserData) {\n            const { username, password } = JSON.parse(storedUserData);\n            // Fetch menu items using username and password\n            const response = await fetch('http://localhost:5000/Login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ username, password })\n            });\n            if (!response.ok) {\n              throw new Error('Failed to fetch menu items');\n            }\n            const data = await response.json();\n            console.log('Received data:', data);\n            setMenuItems(data.items);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching menu items:', error);\n      }\n    };\n\n    fetchMenuItems();\n  }, [location.pathname]); // Fetch menu items whenever the location changes\n\n  let navClass = ['pcoded-navbar'];\n  navClass = [...navClass, layoutType];\n  if (windowSize.width < 992 && collapseMenu) {\n    navClass = [...navClass, 'mob-open'];\n  } else if (collapseMenu) {\n    navClass = [...navClass, 'navbar-collapsed'];\n  }\n  let navBarClass = ['navbar-wrapper'];\n\n  let navContent = (\n    <div className={navBarClass.join(' ')}>\n      <NavLogo />\n      <MenuItems menuItems={menuItems} />\n    </div>\n  );\n\n  if (windowSize.width < 992) {\n    navContent = (\n      <div className=\"navbar-wrapper\">\n        <NavLogo />\n      \n        <MenuItems menuItems={menuItems} />\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      \n      <nav className={navClass.join(' ')}>\n        {navContent}\n      </nav>\n    </React.Fragment>\n  );\n};\n\nexport default Navigation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}