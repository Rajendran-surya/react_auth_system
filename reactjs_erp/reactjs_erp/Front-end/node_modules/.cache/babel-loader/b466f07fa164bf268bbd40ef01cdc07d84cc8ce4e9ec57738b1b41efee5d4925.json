{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshv\\\\Downloads\\\\reactjs_erp\\\\reactjs_erp\\\\Front-end\\\\src\\\\components\\\\admindashboard\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Retrieve error and response data from localStorage when the component mounts\n    const storedError = localStorage.getItem('error');\n    const storedResponse = localStorage.getItem('response');\n    if (storedError) {\n      setError(storedError);\n    }\n    if (storedResponse) {\n      setResponse(JSON.parse(storedResponse));\n    }\n  }, []);\n  const handleClick = () => {\n    fetch('https://arrowapi.algomojo.in/v1/testapi/testgetapi?name=test&email=test@test.com').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      if (data.status === 'error') {\n        setError(data.error_msg);\n      } else {\n        setResponse(data);\n        setError(null);\n        // Save response data to localStorage\n        localStorage.setItem('response', JSON.stringify(data));\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError('Error fetching data. Please try again later.');\n      // Save error to localStorage\n      localStorage.setItem('error', 'Error fetching data. Please try again later.');\n    });\n  };\n  const handleAddToFavorites = () => {\n    // Your existing handleAddToFavorites code\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"92kGcqJmUZHxj5g8slhrA1SfVKo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","response","setResponse","error","setError","storedError","localStorage","getItem","storedResponse","JSON","parse","handleClick","fetch","then","ok","Error","json","data","status","error_msg","setItem","stringify","catch","console","handleAddToFavorites","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yeshv/Downloads/reactjs_erp/reactjs_erp/Front-end/src/components/admindashboard/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Retrieve error and response data from localStorage when the component mounts\r\n    const storedError = localStorage.getItem('error');\r\n    const storedResponse = localStorage.getItem('response');\r\n    if (storedError) {\r\n      setError(storedError);\r\n    }\r\n    if (storedResponse) {\r\n      setResponse(JSON.parse(storedResponse));\r\n    }\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    fetch('https://arrowapi.algomojo.in/v1/testapi/testgetapi?name=test&email=test@test.com')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status === 'error') {\r\n          setError(data.error_msg);\r\n        } else {\r\n          setResponse(data);\r\n          setError(null);\r\n          // Save response data to localStorage\r\n          localStorage.setItem('response', JSON.stringify(data));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data. Please try again later.');\r\n        // Save error to localStorage\r\n        localStorage.setItem('error', 'Error fetching data. Please try again later.');\r\n      });\r\n  };\r\n\r\n  const handleAddToFavorites = () => {\r\n    // Your existing handleAddToFavorites code\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Add the RecentPathsTracker component */}\r\n      {/* Your existing Dashboard content */}\r\n      {/* <h1>Dashboard</h1>\r\n      <button onClick={handleClick}>Call API</button>\r\n      <button onClick={handleAddToFavorites}>Add to Favorites</button>\r\n      {error && <p>Error: {error}</p>}\r\n      {response && !error && <pre>{JSON.stringify(response, null, 2)}</pre>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;IACvB;IACA,IAAIG,cAAc,EAAE;MAClBN,WAAW,CAACO,IAAI,CAACC,KAAK,CAACF,cAAc,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,kFAAkF,CAAC,CACtFC,IAAI,CAACZ,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACa,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOd,QAAQ,CAACe,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDH,IAAI,CAACI,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE;QAC3Bd,QAAQ,CAACa,IAAI,CAACE,SAAS,CAAC;MAC1B,CAAC,MAAM;QACLjB,WAAW,CAACe,IAAI,CAAC;QACjBb,QAAQ,CAAC,IAAI,CAAC;QACd;QACAE,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACY,SAAS,CAACJ,IAAI,CAAC,CAAC;MACxD;IACF,CAAC,CAAC,CACDK,KAAK,CAACnB,KAAK,IAAI;MACdoB,OAAO,CAACpB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,8CAA8C,CAAC;MACxD;MACAE,YAAY,CAACc,OAAO,CAAC,OAAO,EAAE,8CAA8C,CAAC;IAC/E,CAAC,CAAC;EACN,CAAC;EAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjC;EAAA,CACD;EAED,oBACE1B,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQK,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAzDID,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}