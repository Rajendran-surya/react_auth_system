{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshv\\\\Downloads\\\\reactjs_erp\\\\reactjs_erp\\\\Front-end\\\\src\\\\layouts\\\\AdminLayout\\\\NavBar\\\\NavRight\\\\ChatList\\\\Friends\\\\Chat\\\\Messages\\\\index.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = require.context('../../../../../../../../assets/images/user', true);\nconst Messages = _ref => {\n  let {\n    message,\n    photo,\n    name\n  } = _ref;\n  let image = '';\n  if (message.type) {\n    image = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"media-left photo-table\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"media-object img-radius img-radius m-t-5\",\n        src: images(`./${photo}`),\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  let msgClass = [];\n  if (message.type) {\n    msgClass = [...msgClass, 'chat-menu-content'];\n  } else {\n    msgClass = [...msgClass, 'chat-menu-reply text-muted'];\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"d-flex align-items-start shadow-none mb-0 p-0 chat-messages\",\n      style: {\n        flexDirection: 'row',\n        backgroundColor: 'unset'\n      },\n      children: [image, /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: msgClass.join(' '),\n        style: {\n          padding: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-cont\",\n            children: message.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"chat-time\",\n          children: message.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Messages;\nMessages.propTypes = {\n  message: PropTypes.string,\n  photo: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  msg: PropTypes.string,\n  time: PropTypes.string\n};\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["PropTypes","React","Card","Link","jsxDEV","_jsxDEV","images","require","context","Messages","_ref","message","photo","name","image","type","to","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","msgClass","Fragment","style","flexDirection","backgroundColor","Body","join","padding","msg","time","_c","propTypes","string","$RefreshReg$"],"sources":["C:/Users/yeshv/Downloads/reactjs_erp/reactjs_erp/Front-end/src/layouts/AdminLayout/NavBar/NavRight/ChatList/Friends/Chat/Messages/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst images = require.context('../../../../../../../../assets/images/user', true);\n\nconst Messages = ({ message, photo, name }) => {\n  let image = '';\n  if (message.type) {\n    image = (\n      <Link to=\"#\" className=\"media-left photo-table\">\n        <img className=\"media-object img-radius img-radius m-t-5\" src={images(`./${photo}`)} alt={name} />\n      </Link>\n    );\n  }\n\n  let msgClass = [];\n  if (message.type) {\n    msgClass = [...msgClass, 'chat-menu-content'];\n  } else {\n    msgClass = [...msgClass, 'chat-menu-reply text-muted'];\n  }\n\n  return (\n    <React.Fragment>\n      <Card\n        className=\"d-flex align-items-start shadow-none mb-0 p-0 chat-messages\"\n        style={{ flexDirection: 'row', backgroundColor: 'unset' }}\n      >\n        {image}\n        <Card.Body className={msgClass.join(' ')} style={{ padding: 0 }}>\n          <div className=\"\">\n            <p className=\"chat-cont\">{message.msg}</p>\n          </div>\n          <p className=\"chat-time\">{message.time}</p>\n        </Card.Body>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nMessages.propTypes = {\n  message: PropTypes.string,\n  photo: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  msg: PropTypes.string,\n  time: PropTypes.string\n};\n\nexport default Messages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}